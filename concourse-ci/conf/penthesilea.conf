files_in = '/analysis/6561/hdf5/prod/v0.9.9/20181011/pmaps/trigger2/*.h5'
file_out = '/home/ausonandres/test_penthesilea/hdst/trigger2/hdst_6561_trigger2.h5'

# run number 0 is for MC
run_number = 6791

# How frequently to print events
print_mod = 1
# max number of events to run
event_range = all

# compression library
compression = 'ZLIB4'

# s12 selector
drift_v = 1 * mm / mus # Expected drift velocity

s1_nmin     =    1
s1_nmax     =    1
s1_emin     =   40 * pes # Min S1 energy integral
s1_emax     = 1e+6 * pes # Max S1 energy integral
s1_wmin     =  175 * ns # min width for S1
s1_wmax     =  1.e6 * ns # Max width
s1_hmin     =    0 * pes # Min S1 height
s1_hmax     = 1e+6 * pes # Max S1 height
s1_ethr     =  0.5 * pes # Energy threshold for S1

s2_nmin     =     1
s2_nmax     =     100       # Max number of S2 signals
s2_emin     =     0 * pes # Min S2 energy integral
s2_emax     =  1e+8 * pes # Max S2 energy integral in pes
s2_wmin     =     2.5 * mus # Min width
s2_wmax     =    10 * ms  # Max width
s2_hmin     =     0 * pes # Min S2 height
s2_hmax     =  1e+6 * pes # Max S2 height
s2_nsipmmin =     1       # Min number of SiPMs touched
s2_nsipmmax =   2000       # Max number of SiPMs touched
s2_ethr     =     0. * pes # Energy threshold for S2

rebin  =  2


slice_reco_params=dict(
  Qthr           =    3 * pes,  # charge threshold, ignore all SiPMs with less than Qthr pes
  Qlm            =   35 * pes,  # every Cluster must contain at least one SiPM with charge >= Qlm
  lm_radius = 0 *mm,
  new_lm_radius = 15*mm,
  msipm = 6. )

global_reco_params=dict(
  Qthr           =    1. * pes,  # charge threshold, ignore all SiPMs with less than Qthr pes
  Qlm            =   0 * pes,  # every Cluster must contain at least one SiPM with charge >= Qlm
  lm_radius = -1 *mm,
  new_lm_radius = -1*mm,
  msipm = -1. )